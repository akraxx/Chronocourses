//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace Chronocourses.Model
{
    public partial class ChronocoursesEntities : ObjectContext
    {
        public const string ConnectionString = "name=ChronocoursesEntities";
        public const string ContainerName = "ChronocoursesEntities";
    
        #region Constructors
    
        public ChronocoursesEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public ChronocoursesEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public ChronocoursesEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // La création de proxys requiert l'utilisation de ProxyDataContractResolver et
            // peut autoriser le chargement différé, qui peut développer le graphique chargé pendant la sérialisation.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region Propriétés ObjectSet
    
        public ObjectSet<Product> Product
        {
            get { return _product  ?? (_product = CreateObjectSet<Product>("Product")); }
        }
        private ObjectSet<Product> _product;
    
        public ObjectSet<Brand> Brand
        {
            get { return _brand  ?? (_brand = CreateObjectSet<Brand>("Brand")); }
        }
        private ObjectSet<Brand> _brand;
    
        public ObjectSet<Shop> Shop
        {
            get { return _shop  ?? (_shop = CreateObjectSet<Shop>("Shop")); }
        }
        private ObjectSet<Shop> _shop;
    
        public ObjectSet<Address> Address
        {
            get { return _address  ?? (_address = CreateObjectSet<Address>("Address")); }
        }
        private ObjectSet<Address> _address;
    
        public ObjectSet<Entity> Entity
        {
            get { return _entity  ?? (_entity = CreateObjectSet<Entity>("Entity")); }
        }
        private ObjectSet<Entity> _entity;
    
        public ObjectSet<TypeProduct> TypeProduct
        {
            get { return _typeProduct  ?? (_typeProduct = CreateObjectSet<TypeProduct>("TypeProduct")); }
        }
        private ObjectSet<TypeProduct> _typeProduct;

        #endregion
    }
}
