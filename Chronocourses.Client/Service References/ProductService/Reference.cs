//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18046
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Chronocourses.Client.ProductService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Product : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AvailableField;
        
        private Chronocourses.Client.ProductService.Brand BrandField;
        
        private int BrandIDField;
        
        private Chronocourses.Client.ProductService.ObjectChangeTracker ChangeTrackerField;
        
        private string DescriptionField;
        
        private System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Entity> EntityField;
        
        private int IDField;
        
        private string NameField;
        
        private double PriceField;
        
        private Chronocourses.Client.ProductService.TypeProduct TypeProductField;
        
        private int TypeProductIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.Brand Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrandID {
            get {
                return this.BrandIDField;
            }
            set {
                if ((this.BrandIDField.Equals(value) != true)) {
                    this.BrandIDField = value;
                    this.RaisePropertyChanged("BrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Entity> Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.TypeProduct TypeProduct {
            get {
                return this.TypeProductField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeProductField, value) != true)) {
                    this.TypeProductField = value;
                    this.RaisePropertyChanged("TypeProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeProductID {
            get {
                return this.TypeProductIDField;
            }
            set {
                if ((this.TypeProductIDField.Equals(value) != true)) {
                    this.TypeProductIDField = value;
                    this.RaisePropertyChanged("TypeProductID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Brand", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Brand : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.ProductService.ObjectChangeTracker ChangeTrackerField;
        
        private int IDField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> ProductField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectChangeTracker", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class ObjectChangeTracker : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.ProductService.ExtendedPropertiesDictionary ExtendedPropertiesField;
        
        private Chronocourses.Client.ProductService.ObjectsAddedToCollectionProperties ObjectsAddedToCollectionPropertiesField;
        
        private Chronocourses.Client.ProductService.ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionPropertiesField;
        
        private Chronocourses.Client.ProductService.OriginalValuesDictionary OriginalValuesField;
        
        private Chronocourses.Client.ProductService.ObjectState StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.ExtendedPropertiesDictionary ExtendedProperties {
            get {
                return this.ExtendedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedPropertiesField, value) != true)) {
                    this.ExtendedPropertiesField = value;
                    this.RaisePropertyChanged("ExtendedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.ObjectsAddedToCollectionProperties ObjectsAddedToCollectionProperties {
            get {
                return this.ObjectsAddedToCollectionPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsAddedToCollectionPropertiesField, value) != true)) {
                    this.ObjectsAddedToCollectionPropertiesField = value;
                    this.RaisePropertyChanged("ObjectsAddedToCollectionProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionProperties {
            get {
                return this.ObjectsRemovedFromCollectionPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsRemovedFromCollectionPropertiesField, value) != true)) {
                    this.ObjectsRemovedFromCollectionPropertiesField = value;
                    this.RaisePropertyChanged("ObjectsRemovedFromCollectionProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.OriginalValuesDictionary OriginalValues {
            get {
                return this.OriginalValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalValuesField, value) != true)) {
                    this.OriginalValuesField = value;
                    this.RaisePropertyChanged("OriginalValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.ObjectState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeProduct", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class TypeProduct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.ProductService.ObjectChangeTracker ChangeTrackerField;
        
        private int IDField;
        
        private string LabelField;
        
        private System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> ProductField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entity", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Entity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.ProductService.ObjectChangeTracker ChangeTrackerField;
        
        private bool ContainerField;
        
        private int IDField;
        
        private string LabelField;
        
        private int PositionXField;
        
        private int PositionYField;
        
        private System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> ProductField;
        
        private Chronocourses.Client.ProductService.Shop ShopField;
        
        private int ShopIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Container {
            get {
                return this.ContainerField;
            }
            set {
                if ((this.ContainerField.Equals(value) != true)) {
                    this.ContainerField = value;
                    this.RaisePropertyChanged("Container");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PositionX {
            get {
                return this.PositionXField;
            }
            set {
                if ((this.PositionXField.Equals(value) != true)) {
                    this.PositionXField = value;
                    this.RaisePropertyChanged("PositionX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PositionY {
            get {
                return this.PositionYField;
            }
            set {
                if ((this.PositionYField.Equals(value) != true)) {
                    this.PositionYField = value;
                    this.RaisePropertyChanged("PositionY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.Shop Shop {
            get {
                return this.ShopField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopField, value) != true)) {
                    this.ShopField = value;
                    this.RaisePropertyChanged("Shop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShopID {
            get {
                return this.ShopIDField;
            }
            set {
                if ((this.ShopIDField.Equals(value) != true)) {
                    this.ShopIDField = value;
                    this.RaisePropertyChanged("ShopID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExtendedPropertiesDictionary", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="ExtendedProperties", KeyName="Name", ValueName="ExtendedProperty")]
    public class ExtendedPropertiesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsAddedToCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="AddedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="AddedObjects")]
    public class ObjectsAddedToCollectionProperties : System.Collections.Generic.Dictionary<string, Chronocourses.Client.ProductService.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsRemovedFromCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="DeletedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="DeletedObjects")]
    public class ObjectsRemovedFromCollectionProperties : System.Collections.Generic.Dictionary<string, Chronocourses.Client.ProductService.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OriginalValuesDictionary", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="OriginalValues", KeyName="Name", ValueName="OriginalValue")]
    public class OriginalValuesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectState", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model")]
    public enum ObjectState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unchanged = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Added = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modified = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectList", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="ObjectValue")]
    public class ObjectList : System.Collections.ObjectModel.ObservableCollection<object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shop", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Shop : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.ProductService.Address AddressField;
        
        private int AddressIDField;
        
        private Chronocourses.Client.ProductService.ObjectChangeTracker ChangeTrackerField;
        
        private System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Entity> EntityField;
        
        private short HeightField;
        
        private int IDField;
        
        private string NameField;
        
        private short WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Entity> Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Address : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.ProductService.ObjectChangeTracker ChangeTrackerField;
        
        private string CityField;
        
        private string CountryField;
        
        private int IDField;
        
        private short NumberField;
        
        private System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Shop> ShopField;
        
        private string StreetField;
        
        private int ZipCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.ProductService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Shop> Shop {
            get {
                return this.ShopField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopField, value) != true)) {
                    this.ShopField = value;
                    this.RaisePropertyChanged("Shop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((this.ZipCodeField.Equals(value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductService.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetProducts", ReplyAction="http://tempuri.org/IProductService/GetProductsResponse")]
        System.IAsyncResult BeginGetProducts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> EndGetProducts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetProduct", ReplyAction="http://tempuri.org/IProductService/GetProductResponse")]
        System.IAsyncResult BeginGetProduct(int id, System.AsyncCallback callback, object asyncState);
        
        Chronocourses.Client.ProductService.Product EndGetProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/SaveProduct", ReplyAction="http://tempuri.org/IProductService/SaveProductResponse")]
        System.IAsyncResult BeginSaveProduct(Chronocourses.Client.ProductService.Product product, System.AsyncCallback callback, object asyncState);
        
        int EndSaveProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/AddProduct", ReplyAction="http://tempuri.org/IProductService/AddProductResponse")]
        System.IAsyncResult BeginAddProduct(Chronocourses.Client.ProductService.Product product, System.AsyncCallback callback, object asyncState);
        
        int EndAddProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        System.IAsyncResult BeginDeleteProduct(Chronocourses.Client.ProductService.Product product, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/SaveProducts", ReplyAction="http://tempuri.org/IProductService/SaveProductsResponse")]
        System.IAsyncResult BeginSaveProducts(System.AsyncCallback callback, object asyncState);
        
        int EndSaveProducts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetShortestPath", ReplyAction="http://tempuri.org/IProductService/GetShortestPathResponse")]
        System.IAsyncResult BeginGetShortestPath(int shopID, System.Collections.ObjectModel.ObservableCollection<int> startPos, System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> lP, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>>> EndGetShortestPath(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : Chronocourses.Client.ProductService.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Chronocourses.Client.ProductService.Product Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Chronocourses.Client.ProductService.Product)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetShortestPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetShortestPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<Chronocourses.Client.ProductService.IProductService>, Chronocourses.Client.ProductService.IProductService {
        
        private BeginOperationDelegate onBeginGetProductsDelegate;
        
        private EndOperationDelegate onEndGetProductsDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductDelegate;
        
        private EndOperationDelegate onEndGetProductDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveProductDelegate;
        
        private EndOperationDelegate onEndSaveProductDelegate;
        
        private System.Threading.SendOrPostCallback onSaveProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddProductDelegate;
        
        private EndOperationDelegate onEndAddProductDelegate;
        
        private System.Threading.SendOrPostCallback onAddProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteProductDelegate;
        
        private EndOperationDelegate onEndDeleteProductDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveProductsDelegate;
        
        private EndOperationDelegate onEndSaveProductsDelegate;
        
        private System.Threading.SendOrPostCallback onSaveProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetShortestPathDelegate;
        
        private EndOperationDelegate onEndGetShortestPathDelegate;
        
        private System.Threading.SendOrPostCallback onGetShortestPathCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetProductsCompletedEventArgs> GetProductsCompleted;
        
        public event System.EventHandler<GetProductCompletedEventArgs> GetProductCompleted;
        
        public event System.EventHandler<SaveProductCompletedEventArgs> SaveProductCompleted;
        
        public event System.EventHandler<AddProductCompletedEventArgs> AddProductCompleted;
        
        public event System.EventHandler<DeleteProductCompletedEventArgs> DeleteProductCompleted;
        
        public event System.EventHandler<SaveProductsCompletedEventArgs> SaveProductsCompleted;
        
        public event System.EventHandler<GetShortestPathCompletedEventArgs> GetShortestPathCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.ProductService.IProductService.BeginGetProducts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProducts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> Chronocourses.Client.ProductService.IProductService.EndGetProducts(System.IAsyncResult result) {
            return base.Channel.EndGetProducts(result);
        }
        
        private System.IAsyncResult OnBeginGetProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Chronocourses.Client.ProductService.IProductService)(this)).BeginGetProducts(callback, asyncState);
        }
        
        private object[] OnEndGetProducts(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> retVal = ((Chronocourses.Client.ProductService.IProductService)(this)).EndGetProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductsCompleted(object state) {
            if ((this.GetProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductsCompleted(this, new GetProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductsAsync() {
            this.GetProductsAsync(null);
        }
        
        public void GetProductsAsync(object userState) {
            if ((this.onBeginGetProductsDelegate == null)) {
                this.onBeginGetProductsDelegate = new BeginOperationDelegate(this.OnBeginGetProducts);
            }
            if ((this.onEndGetProductsDelegate == null)) {
                this.onEndGetProductsDelegate = new EndOperationDelegate(this.OnEndGetProducts);
            }
            if ((this.onGetProductsCompletedDelegate == null)) {
                this.onGetProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductsCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductsDelegate, null, this.onEndGetProductsDelegate, this.onGetProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.ProductService.IProductService.BeginGetProduct(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProduct(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Chronocourses.Client.ProductService.Product Chronocourses.Client.ProductService.IProductService.EndGetProduct(System.IAsyncResult result) {
            return base.Channel.EndGetProduct(result);
        }
        
        private System.IAsyncResult OnBeginGetProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((Chronocourses.Client.ProductService.IProductService)(this)).BeginGetProduct(id, callback, asyncState);
        }
        
        private object[] OnEndGetProduct(System.IAsyncResult result) {
            Chronocourses.Client.ProductService.Product retVal = ((Chronocourses.Client.ProductService.IProductService)(this)).EndGetProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductCompleted(object state) {
            if ((this.GetProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductCompleted(this, new GetProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductAsync(int id) {
            this.GetProductAsync(id, null);
        }
        
        public void GetProductAsync(int id, object userState) {
            if ((this.onBeginGetProductDelegate == null)) {
                this.onBeginGetProductDelegate = new BeginOperationDelegate(this.OnBeginGetProduct);
            }
            if ((this.onEndGetProductDelegate == null)) {
                this.onEndGetProductDelegate = new EndOperationDelegate(this.OnEndGetProduct);
            }
            if ((this.onGetProductCompletedDelegate == null)) {
                this.onGetProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductDelegate, new object[] {
                        id}, this.onEndGetProductDelegate, this.onGetProductCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.ProductService.IProductService.BeginSaveProduct(Chronocourses.Client.ProductService.Product product, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveProduct(product, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.ProductService.IProductService.EndSaveProduct(System.IAsyncResult result) {
            return base.Channel.EndSaveProduct(result);
        }
        
        private System.IAsyncResult OnBeginSaveProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.ProductService.Product product = ((Chronocourses.Client.ProductService.Product)(inValues[0]));
            return ((Chronocourses.Client.ProductService.IProductService)(this)).BeginSaveProduct(product, callback, asyncState);
        }
        
        private object[] OnEndSaveProduct(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.ProductService.IProductService)(this)).EndSaveProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveProductCompleted(object state) {
            if ((this.SaveProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveProductCompleted(this, new SaveProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveProductAsync(Chronocourses.Client.ProductService.Product product) {
            this.SaveProductAsync(product, null);
        }
        
        public void SaveProductAsync(Chronocourses.Client.ProductService.Product product, object userState) {
            if ((this.onBeginSaveProductDelegate == null)) {
                this.onBeginSaveProductDelegate = new BeginOperationDelegate(this.OnBeginSaveProduct);
            }
            if ((this.onEndSaveProductDelegate == null)) {
                this.onEndSaveProductDelegate = new EndOperationDelegate(this.OnEndSaveProduct);
            }
            if ((this.onSaveProductCompletedDelegate == null)) {
                this.onSaveProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveProductCompleted);
            }
            base.InvokeAsync(this.onBeginSaveProductDelegate, new object[] {
                        product}, this.onEndSaveProductDelegate, this.onSaveProductCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.ProductService.IProductService.BeginAddProduct(Chronocourses.Client.ProductService.Product product, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddProduct(product, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.ProductService.IProductService.EndAddProduct(System.IAsyncResult result) {
            return base.Channel.EndAddProduct(result);
        }
        
        private System.IAsyncResult OnBeginAddProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.ProductService.Product product = ((Chronocourses.Client.ProductService.Product)(inValues[0]));
            return ((Chronocourses.Client.ProductService.IProductService)(this)).BeginAddProduct(product, callback, asyncState);
        }
        
        private object[] OnEndAddProduct(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.ProductService.IProductService)(this)).EndAddProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddProductCompleted(object state) {
            if ((this.AddProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddProductCompleted(this, new AddProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddProductAsync(Chronocourses.Client.ProductService.Product product) {
            this.AddProductAsync(product, null);
        }
        
        public void AddProductAsync(Chronocourses.Client.ProductService.Product product, object userState) {
            if ((this.onBeginAddProductDelegate == null)) {
                this.onBeginAddProductDelegate = new BeginOperationDelegate(this.OnBeginAddProduct);
            }
            if ((this.onEndAddProductDelegate == null)) {
                this.onEndAddProductDelegate = new EndOperationDelegate(this.OnEndAddProduct);
            }
            if ((this.onAddProductCompletedDelegate == null)) {
                this.onAddProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddProductCompleted);
            }
            base.InvokeAsync(this.onBeginAddProductDelegate, new object[] {
                        product}, this.onEndAddProductDelegate, this.onAddProductCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.ProductService.IProductService.BeginDeleteProduct(Chronocourses.Client.ProductService.Product product, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteProduct(product, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.ProductService.IProductService.EndDeleteProduct(System.IAsyncResult result) {
            return base.Channel.EndDeleteProduct(result);
        }
        
        private System.IAsyncResult OnBeginDeleteProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.ProductService.Product product = ((Chronocourses.Client.ProductService.Product)(inValues[0]));
            return ((Chronocourses.Client.ProductService.IProductService)(this)).BeginDeleteProduct(product, callback, asyncState);
        }
        
        private object[] OnEndDeleteProduct(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.ProductService.IProductService)(this)).EndDeleteProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteProductCompleted(object state) {
            if ((this.DeleteProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteProductCompleted(this, new DeleteProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteProductAsync(Chronocourses.Client.ProductService.Product product) {
            this.DeleteProductAsync(product, null);
        }
        
        public void DeleteProductAsync(Chronocourses.Client.ProductService.Product product, object userState) {
            if ((this.onBeginDeleteProductDelegate == null)) {
                this.onBeginDeleteProductDelegate = new BeginOperationDelegate(this.OnBeginDeleteProduct);
            }
            if ((this.onEndDeleteProductDelegate == null)) {
                this.onEndDeleteProductDelegate = new EndOperationDelegate(this.OnEndDeleteProduct);
            }
            if ((this.onDeleteProductCompletedDelegate == null)) {
                this.onDeleteProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteProductCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteProductDelegate, new object[] {
                        product}, this.onEndDeleteProductDelegate, this.onDeleteProductCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.ProductService.IProductService.BeginSaveProducts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveProducts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.ProductService.IProductService.EndSaveProducts(System.IAsyncResult result) {
            return base.Channel.EndSaveProducts(result);
        }
        
        private System.IAsyncResult OnBeginSaveProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Chronocourses.Client.ProductService.IProductService)(this)).BeginSaveProducts(callback, asyncState);
        }
        
        private object[] OnEndSaveProducts(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.ProductService.IProductService)(this)).EndSaveProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveProductsCompleted(object state) {
            if ((this.SaveProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveProductsCompleted(this, new SaveProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveProductsAsync() {
            this.SaveProductsAsync(null);
        }
        
        public void SaveProductsAsync(object userState) {
            if ((this.onBeginSaveProductsDelegate == null)) {
                this.onBeginSaveProductsDelegate = new BeginOperationDelegate(this.OnBeginSaveProducts);
            }
            if ((this.onEndSaveProductsDelegate == null)) {
                this.onEndSaveProductsDelegate = new EndOperationDelegate(this.OnEndSaveProducts);
            }
            if ((this.onSaveProductsCompletedDelegate == null)) {
                this.onSaveProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveProductsCompleted);
            }
            base.InvokeAsync(this.onBeginSaveProductsDelegate, null, this.onEndSaveProductsDelegate, this.onSaveProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.ProductService.IProductService.BeginGetShortestPath(int shopID, System.Collections.ObjectModel.ObservableCollection<int> startPos, System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> lP, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetShortestPath(shopID, startPos, lP, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>>> Chronocourses.Client.ProductService.IProductService.EndGetShortestPath(System.IAsyncResult result) {
            return base.Channel.EndGetShortestPath(result);
        }
        
        private System.IAsyncResult OnBeginGetShortestPath(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int shopID = ((int)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<int> startPos = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> lP = ((System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product>)(inValues[2]));
            return ((Chronocourses.Client.ProductService.IProductService)(this)).BeginGetShortestPath(shopID, startPos, lP, callback, asyncState);
        }
        
        private object[] OnEndGetShortestPath(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>>> retVal = ((Chronocourses.Client.ProductService.IProductService)(this)).EndGetShortestPath(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetShortestPathCompleted(object state) {
            if ((this.GetShortestPathCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetShortestPathCompleted(this, new GetShortestPathCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetShortestPathAsync(int shopID, System.Collections.ObjectModel.ObservableCollection<int> startPos, System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> lP) {
            this.GetShortestPathAsync(shopID, startPos, lP, null);
        }
        
        public void GetShortestPathAsync(int shopID, System.Collections.ObjectModel.ObservableCollection<int> startPos, System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> lP, object userState) {
            if ((this.onBeginGetShortestPathDelegate == null)) {
                this.onBeginGetShortestPathDelegate = new BeginOperationDelegate(this.OnBeginGetShortestPath);
            }
            if ((this.onEndGetShortestPathDelegate == null)) {
                this.onEndGetShortestPathDelegate = new EndOperationDelegate(this.OnEndGetShortestPath);
            }
            if ((this.onGetShortestPathCompletedDelegate == null)) {
                this.onGetShortestPathCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetShortestPathCompleted);
            }
            base.InvokeAsync(this.onBeginGetShortestPathDelegate, new object[] {
                        shopID,
                        startPos,
                        lP}, this.onEndGetShortestPathDelegate, this.onGetShortestPathCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Chronocourses.Client.ProductService.IProductService CreateChannel() {
            return new ProductServiceClientChannel(this);
        }
        
        private class ProductServiceClientChannel : ChannelBase<Chronocourses.Client.ProductService.IProductService>, Chronocourses.Client.ProductService.IProductService {
            
            public ProductServiceClientChannel(System.ServiceModel.ClientBase<Chronocourses.Client.ProductService.IProductService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetProducts(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetProducts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> EndGetProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> _result = ((System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product>)(base.EndInvoke("GetProducts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProduct(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetProduct", _args, callback, asyncState);
                return _result;
            }
            
            public Chronocourses.Client.ProductService.Product EndGetProduct(System.IAsyncResult result) {
                object[] _args = new object[0];
                Chronocourses.Client.ProductService.Product _result = ((Chronocourses.Client.ProductService.Product)(base.EndInvoke("GetProduct", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveProduct(Chronocourses.Client.ProductService.Product product, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = product;
                System.IAsyncResult _result = base.BeginInvoke("SaveProduct", _args, callback, asyncState);
                return _result;
            }
            
            public int EndSaveProduct(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("SaveProduct", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddProduct(Chronocourses.Client.ProductService.Product product, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = product;
                System.IAsyncResult _result = base.BeginInvoke("AddProduct", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAddProduct(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AddProduct", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteProduct(Chronocourses.Client.ProductService.Product product, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = product;
                System.IAsyncResult _result = base.BeginInvoke("DeleteProduct", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeleteProduct(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeleteProduct", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveProducts(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("SaveProducts", _args, callback, asyncState);
                return _result;
            }
            
            public int EndSaveProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("SaveProducts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetShortestPath(int shopID, System.Collections.ObjectModel.ObservableCollection<int> startPos, System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.ProductService.Product> lP, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = shopID;
                _args[1] = startPos;
                _args[2] = lP;
                System.IAsyncResult _result = base.BeginInvoke("GetShortestPath", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>>> EndGetShortestPath(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>>> _result = ((System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>>>)(base.EndInvoke("GetShortestPath", _args, result)));
                return _result;
            }
        }
    }
}
