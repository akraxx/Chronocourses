//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18046
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Chronocourses.Client.EntityService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entity", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Entity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.EntityService.ObjectChangeTracker ChangeTrackerField;
        
        private bool ContainerField;
        
        private int IDField;
        
        private string LabelField;
        
        private int PositionXField;
        
        private int PositionYField;
        
        private System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Product> ProductField;
        
        private Chronocourses.Client.EntityService.Shop ShopField;
        
        private int ShopIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Container {
            get {
                return this.ContainerField;
            }
            set {
                if ((this.ContainerField.Equals(value) != true)) {
                    this.ContainerField = value;
                    this.RaisePropertyChanged("Container");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PositionX {
            get {
                return this.PositionXField;
            }
            set {
                if ((this.PositionXField.Equals(value) != true)) {
                    this.PositionXField = value;
                    this.RaisePropertyChanged("PositionX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PositionY {
            get {
                return this.PositionYField;
            }
            set {
                if ((this.PositionYField.Equals(value) != true)) {
                    this.PositionYField = value;
                    this.RaisePropertyChanged("PositionY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Product> Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.Shop Shop {
            get {
                return this.ShopField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopField, value) != true)) {
                    this.ShopField = value;
                    this.RaisePropertyChanged("Shop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShopID {
            get {
                return this.ShopIDField;
            }
            set {
                if ((this.ShopIDField.Equals(value) != true)) {
                    this.ShopIDField = value;
                    this.RaisePropertyChanged("ShopID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectChangeTracker", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class ObjectChangeTracker : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.EntityService.ExtendedPropertiesDictionary ExtendedPropertiesField;
        
        private Chronocourses.Client.EntityService.ObjectsAddedToCollectionProperties ObjectsAddedToCollectionPropertiesField;
        
        private Chronocourses.Client.EntityService.ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionPropertiesField;
        
        private Chronocourses.Client.EntityService.OriginalValuesDictionary OriginalValuesField;
        
        private Chronocourses.Client.EntityService.ObjectState StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.ExtendedPropertiesDictionary ExtendedProperties {
            get {
                return this.ExtendedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedPropertiesField, value) != true)) {
                    this.ExtendedPropertiesField = value;
                    this.RaisePropertyChanged("ExtendedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.ObjectsAddedToCollectionProperties ObjectsAddedToCollectionProperties {
            get {
                return this.ObjectsAddedToCollectionPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsAddedToCollectionPropertiesField, value) != true)) {
                    this.ObjectsAddedToCollectionPropertiesField = value;
                    this.RaisePropertyChanged("ObjectsAddedToCollectionProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionProperties {
            get {
                return this.ObjectsRemovedFromCollectionPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsRemovedFromCollectionPropertiesField, value) != true)) {
                    this.ObjectsRemovedFromCollectionPropertiesField = value;
                    this.RaisePropertyChanged("ObjectsRemovedFromCollectionProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.OriginalValuesDictionary OriginalValues {
            get {
                return this.OriginalValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalValuesField, value) != true)) {
                    this.OriginalValuesField = value;
                    this.RaisePropertyChanged("OriginalValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.ObjectState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shop", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Shop : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.EntityService.Address AddressField;
        
        private int AddressIDField;
        
        private Chronocourses.Client.EntityService.ObjectChangeTracker ChangeTrackerField;
        
        private System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Entity> EntityField;
        
        private short HeightField;
        
        private int IDField;
        
        private string NameField;
        
        private short WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Entity> Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Product : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AvailableField;
        
        private Chronocourses.Client.EntityService.Brand BrandField;
        
        private int BrandIDField;
        
        private Chronocourses.Client.EntityService.ObjectChangeTracker ChangeTrackerField;
        
        private string DescriptionField;
        
        private System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Entity> EntityField;
        
        private int IDField;
        
        private string NameField;
        
        private double PriceField;
        
        private Chronocourses.Client.EntityService.TypeProduct TypeProductField;
        
        private int TypeProductIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.Brand Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrandID {
            get {
                return this.BrandIDField;
            }
            set {
                if ((this.BrandIDField.Equals(value) != true)) {
                    this.BrandIDField = value;
                    this.RaisePropertyChanged("BrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Entity> Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.TypeProduct TypeProduct {
            get {
                return this.TypeProductField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeProductField, value) != true)) {
                    this.TypeProductField = value;
                    this.RaisePropertyChanged("TypeProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeProductID {
            get {
                return this.TypeProductIDField;
            }
            set {
                if ((this.TypeProductIDField.Equals(value) != true)) {
                    this.TypeProductIDField = value;
                    this.RaisePropertyChanged("TypeProductID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExtendedPropertiesDictionary", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="ExtendedProperties", KeyName="Name", ValueName="ExtendedProperty")]
    public class ExtendedPropertiesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsAddedToCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="AddedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="AddedObjects")]
    public class ObjectsAddedToCollectionProperties : System.Collections.Generic.Dictionary<string, Chronocourses.Client.EntityService.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsRemovedFromCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="DeletedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="DeletedObjects")]
    public class ObjectsRemovedFromCollectionProperties : System.Collections.Generic.Dictionary<string, Chronocourses.Client.EntityService.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OriginalValuesDictionary", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="OriginalValues", KeyName="Name", ValueName="OriginalValue")]
    public class OriginalValuesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectState", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model")]
    public enum ObjectState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unchanged = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Added = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modified = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectList", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="ObjectValue")]
    public class ObjectList : System.Collections.ObjectModel.ObservableCollection<object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Brand", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Brand : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.EntityService.ObjectChangeTracker ChangeTrackerField;
        
        private int IDField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Product> ProductField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Product> Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeProduct", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class TypeProduct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.EntityService.ObjectChangeTracker ChangeTrackerField;
        
        private int IDField;
        
        private string LabelField;
        
        private System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Product> ProductField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Product> Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Address : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.EntityService.ObjectChangeTracker ChangeTrackerField;
        
        private string CityField;
        
        private string CountryField;
        
        private int IDField;
        
        private short NumberField;
        
        private System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Shop> ShopField;
        
        private string StreetField;
        
        private int ZipCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.EntityService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Shop> Shop {
            get {
                return this.ShopField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopField, value) != true)) {
                    this.ShopField = value;
                    this.RaisePropertyChanged("Shop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((this.ZipCodeField.Equals(value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EntityService.IEntityService")]
    public interface IEntityService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEntityService/GetEntitys", ReplyAction="http://tempuri.org/IEntityService/GetEntitysResponse")]
        System.IAsyncResult BeginGetEntitys(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Entity> EndGetEntitys(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEntityService/addProductToContainer", ReplyAction="http://tempuri.org/IEntityService/addProductToContainerResponse")]
        System.IAsyncResult BeginaddProductToContainer(Chronocourses.Client.EntityService.Product product, Chronocourses.Client.EntityService.Entity ent, System.AsyncCallback callback, object asyncState);
        
        int EndaddProductToContainer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEntityService/RemoveProductFromContainer", ReplyAction="http://tempuri.org/IEntityService/RemoveProductFromContainerResponse")]
        System.IAsyncResult BeginRemoveProductFromContainer(Chronocourses.Client.EntityService.Product product, Chronocourses.Client.EntityService.Entity ent, System.AsyncCallback callback, object asyncState);
        
        int EndRemoveProductFromContainer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEntityService/RemoveAllProductsFromContainer", ReplyAction="http://tempuri.org/IEntityService/RemoveAllProductsFromContainerResponse")]
        System.IAsyncResult BeginRemoveAllProductsFromContainer(Chronocourses.Client.EntityService.Entity ent, System.AsyncCallback callback, object asyncState);
        
        int EndRemoveAllProductsFromContainer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEntityService/setContainer", ReplyAction="http://tempuri.org/IEntityService/setContainerResponse")]
        System.IAsyncResult BeginsetContainer(Chronocourses.Client.EntityService.Entity ent, bool container, System.AsyncCallback callback, object asyncState);
        
        int EndsetContainer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEntityService/GetEntity", ReplyAction="http://tempuri.org/IEntityService/GetEntityResponse")]
        System.IAsyncResult BeginGetEntity(int id, System.AsyncCallback callback, object asyncState);
        
        Chronocourses.Client.EntityService.Entity EndGetEntity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEntityService/SaveEntity", ReplyAction="http://tempuri.org/IEntityService/SaveEntityResponse")]
        System.IAsyncResult BeginSaveEntity(Chronocourses.Client.EntityService.Entity Entity, System.AsyncCallback callback, object asyncState);
        
        void EndSaveEntity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEntityService/AddEntity", ReplyAction="http://tempuri.org/IEntityService/AddEntityResponse")]
        System.IAsyncResult BeginAddEntity(Chronocourses.Client.EntityService.Entity Entity, System.AsyncCallback callback, object asyncState);
        
        int EndAddEntity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEntityService/DeleteEntity", ReplyAction="http://tempuri.org/IEntityService/DeleteEntityResponse")]
        System.IAsyncResult BeginDeleteEntity(Chronocourses.Client.EntityService.Entity Entity, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteEntity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEntityService/SaveEntitys", ReplyAction="http://tempuri.org/IEntityService/SaveEntitysResponse")]
        System.IAsyncResult BeginSaveEntitys(System.AsyncCallback callback, object asyncState);
        
        void EndSaveEntitys(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEntityServiceChannel : Chronocourses.Client.EntityService.IEntityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEntitysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEntitysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Entity> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Entity>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addProductToContainerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addProductToContainerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveProductFromContainerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveProductFromContainerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveAllProductsFromContainerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveAllProductsFromContainerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class setContainerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public setContainerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Chronocourses.Client.EntityService.Entity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Chronocourses.Client.EntityService.Entity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityServiceClient : System.ServiceModel.ClientBase<Chronocourses.Client.EntityService.IEntityService>, Chronocourses.Client.EntityService.IEntityService {
        
        private BeginOperationDelegate onBeginGetEntitysDelegate;
        
        private EndOperationDelegate onEndGetEntitysDelegate;
        
        private System.Threading.SendOrPostCallback onGetEntitysCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddProductToContainerDelegate;
        
        private EndOperationDelegate onEndaddProductToContainerDelegate;
        
        private System.Threading.SendOrPostCallback onaddProductToContainerCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveProductFromContainerDelegate;
        
        private EndOperationDelegate onEndRemoveProductFromContainerDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveProductFromContainerCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveAllProductsFromContainerDelegate;
        
        private EndOperationDelegate onEndRemoveAllProductsFromContainerDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveAllProductsFromContainerCompletedDelegate;
        
        private BeginOperationDelegate onBeginsetContainerDelegate;
        
        private EndOperationDelegate onEndsetContainerDelegate;
        
        private System.Threading.SendOrPostCallback onsetContainerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEntityDelegate;
        
        private EndOperationDelegate onEndGetEntityDelegate;
        
        private System.Threading.SendOrPostCallback onGetEntityCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveEntityDelegate;
        
        private EndOperationDelegate onEndSaveEntityDelegate;
        
        private System.Threading.SendOrPostCallback onSaveEntityCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddEntityDelegate;
        
        private EndOperationDelegate onEndAddEntityDelegate;
        
        private System.Threading.SendOrPostCallback onAddEntityCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteEntityDelegate;
        
        private EndOperationDelegate onEndDeleteEntityDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteEntityCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveEntitysDelegate;
        
        private EndOperationDelegate onEndSaveEntitysDelegate;
        
        private System.Threading.SendOrPostCallback onSaveEntitysCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public EntityServiceClient() {
        }
        
        public EntityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EntityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EntityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EntityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetEntitysCompletedEventArgs> GetEntitysCompleted;
        
        public event System.EventHandler<addProductToContainerCompletedEventArgs> addProductToContainerCompleted;
        
        public event System.EventHandler<RemoveProductFromContainerCompletedEventArgs> RemoveProductFromContainerCompleted;
        
        public event System.EventHandler<RemoveAllProductsFromContainerCompletedEventArgs> RemoveAllProductsFromContainerCompleted;
        
        public event System.EventHandler<setContainerCompletedEventArgs> setContainerCompleted;
        
        public event System.EventHandler<GetEntityCompletedEventArgs> GetEntityCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveEntityCompleted;
        
        public event System.EventHandler<AddEntityCompletedEventArgs> AddEntityCompleted;
        
        public event System.EventHandler<DeleteEntityCompletedEventArgs> DeleteEntityCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveEntitysCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.EntityService.IEntityService.BeginGetEntitys(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEntitys(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Entity> Chronocourses.Client.EntityService.IEntityService.EndGetEntitys(System.IAsyncResult result) {
            return base.Channel.EndGetEntitys(result);
        }
        
        private System.IAsyncResult OnBeginGetEntitys(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Chronocourses.Client.EntityService.IEntityService)(this)).BeginGetEntitys(callback, asyncState);
        }
        
        private object[] OnEndGetEntitys(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Entity> retVal = ((Chronocourses.Client.EntityService.IEntityService)(this)).EndGetEntitys(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEntitysCompleted(object state) {
            if ((this.GetEntitysCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEntitysCompleted(this, new GetEntitysCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEntitysAsync() {
            this.GetEntitysAsync(null);
        }
        
        public void GetEntitysAsync(object userState) {
            if ((this.onBeginGetEntitysDelegate == null)) {
                this.onBeginGetEntitysDelegate = new BeginOperationDelegate(this.OnBeginGetEntitys);
            }
            if ((this.onEndGetEntitysDelegate == null)) {
                this.onEndGetEntitysDelegate = new EndOperationDelegate(this.OnEndGetEntitys);
            }
            if ((this.onGetEntitysCompletedDelegate == null)) {
                this.onGetEntitysCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEntitysCompleted);
            }
            base.InvokeAsync(this.onBeginGetEntitysDelegate, null, this.onEndGetEntitysDelegate, this.onGetEntitysCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.EntityService.IEntityService.BeginaddProductToContainer(Chronocourses.Client.EntityService.Product product, Chronocourses.Client.EntityService.Entity ent, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddProductToContainer(product, ent, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.EntityService.IEntityService.EndaddProductToContainer(System.IAsyncResult result) {
            return base.Channel.EndaddProductToContainer(result);
        }
        
        private System.IAsyncResult OnBeginaddProductToContainer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.EntityService.Product product = ((Chronocourses.Client.EntityService.Product)(inValues[0]));
            Chronocourses.Client.EntityService.Entity ent = ((Chronocourses.Client.EntityService.Entity)(inValues[1]));
            return ((Chronocourses.Client.EntityService.IEntityService)(this)).BeginaddProductToContainer(product, ent, callback, asyncState);
        }
        
        private object[] OnEndaddProductToContainer(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.EntityService.IEntityService)(this)).EndaddProductToContainer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddProductToContainerCompleted(object state) {
            if ((this.addProductToContainerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addProductToContainerCompleted(this, new addProductToContainerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addProductToContainerAsync(Chronocourses.Client.EntityService.Product product, Chronocourses.Client.EntityService.Entity ent) {
            this.addProductToContainerAsync(product, ent, null);
        }
        
        public void addProductToContainerAsync(Chronocourses.Client.EntityService.Product product, Chronocourses.Client.EntityService.Entity ent, object userState) {
            if ((this.onBeginaddProductToContainerDelegate == null)) {
                this.onBeginaddProductToContainerDelegate = new BeginOperationDelegate(this.OnBeginaddProductToContainer);
            }
            if ((this.onEndaddProductToContainerDelegate == null)) {
                this.onEndaddProductToContainerDelegate = new EndOperationDelegate(this.OnEndaddProductToContainer);
            }
            if ((this.onaddProductToContainerCompletedDelegate == null)) {
                this.onaddProductToContainerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddProductToContainerCompleted);
            }
            base.InvokeAsync(this.onBeginaddProductToContainerDelegate, new object[] {
                        product,
                        ent}, this.onEndaddProductToContainerDelegate, this.onaddProductToContainerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.EntityService.IEntityService.BeginRemoveProductFromContainer(Chronocourses.Client.EntityService.Product product, Chronocourses.Client.EntityService.Entity ent, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveProductFromContainer(product, ent, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.EntityService.IEntityService.EndRemoveProductFromContainer(System.IAsyncResult result) {
            return base.Channel.EndRemoveProductFromContainer(result);
        }
        
        private System.IAsyncResult OnBeginRemoveProductFromContainer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.EntityService.Product product = ((Chronocourses.Client.EntityService.Product)(inValues[0]));
            Chronocourses.Client.EntityService.Entity ent = ((Chronocourses.Client.EntityService.Entity)(inValues[1]));
            return ((Chronocourses.Client.EntityService.IEntityService)(this)).BeginRemoveProductFromContainer(product, ent, callback, asyncState);
        }
        
        private object[] OnEndRemoveProductFromContainer(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.EntityService.IEntityService)(this)).EndRemoveProductFromContainer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveProductFromContainerCompleted(object state) {
            if ((this.RemoveProductFromContainerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveProductFromContainerCompleted(this, new RemoveProductFromContainerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveProductFromContainerAsync(Chronocourses.Client.EntityService.Product product, Chronocourses.Client.EntityService.Entity ent) {
            this.RemoveProductFromContainerAsync(product, ent, null);
        }
        
        public void RemoveProductFromContainerAsync(Chronocourses.Client.EntityService.Product product, Chronocourses.Client.EntityService.Entity ent, object userState) {
            if ((this.onBeginRemoveProductFromContainerDelegate == null)) {
                this.onBeginRemoveProductFromContainerDelegate = new BeginOperationDelegate(this.OnBeginRemoveProductFromContainer);
            }
            if ((this.onEndRemoveProductFromContainerDelegate == null)) {
                this.onEndRemoveProductFromContainerDelegate = new EndOperationDelegate(this.OnEndRemoveProductFromContainer);
            }
            if ((this.onRemoveProductFromContainerCompletedDelegate == null)) {
                this.onRemoveProductFromContainerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveProductFromContainerCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveProductFromContainerDelegate, new object[] {
                        product,
                        ent}, this.onEndRemoveProductFromContainerDelegate, this.onRemoveProductFromContainerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.EntityService.IEntityService.BeginRemoveAllProductsFromContainer(Chronocourses.Client.EntityService.Entity ent, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveAllProductsFromContainer(ent, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.EntityService.IEntityService.EndRemoveAllProductsFromContainer(System.IAsyncResult result) {
            return base.Channel.EndRemoveAllProductsFromContainer(result);
        }
        
        private System.IAsyncResult OnBeginRemoveAllProductsFromContainer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.EntityService.Entity ent = ((Chronocourses.Client.EntityService.Entity)(inValues[0]));
            return ((Chronocourses.Client.EntityService.IEntityService)(this)).BeginRemoveAllProductsFromContainer(ent, callback, asyncState);
        }
        
        private object[] OnEndRemoveAllProductsFromContainer(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.EntityService.IEntityService)(this)).EndRemoveAllProductsFromContainer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveAllProductsFromContainerCompleted(object state) {
            if ((this.RemoveAllProductsFromContainerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveAllProductsFromContainerCompleted(this, new RemoveAllProductsFromContainerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveAllProductsFromContainerAsync(Chronocourses.Client.EntityService.Entity ent) {
            this.RemoveAllProductsFromContainerAsync(ent, null);
        }
        
        public void RemoveAllProductsFromContainerAsync(Chronocourses.Client.EntityService.Entity ent, object userState) {
            if ((this.onBeginRemoveAllProductsFromContainerDelegate == null)) {
                this.onBeginRemoveAllProductsFromContainerDelegate = new BeginOperationDelegate(this.OnBeginRemoveAllProductsFromContainer);
            }
            if ((this.onEndRemoveAllProductsFromContainerDelegate == null)) {
                this.onEndRemoveAllProductsFromContainerDelegate = new EndOperationDelegate(this.OnEndRemoveAllProductsFromContainer);
            }
            if ((this.onRemoveAllProductsFromContainerCompletedDelegate == null)) {
                this.onRemoveAllProductsFromContainerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveAllProductsFromContainerCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveAllProductsFromContainerDelegate, new object[] {
                        ent}, this.onEndRemoveAllProductsFromContainerDelegate, this.onRemoveAllProductsFromContainerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.EntityService.IEntityService.BeginsetContainer(Chronocourses.Client.EntityService.Entity ent, bool container, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsetContainer(ent, container, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.EntityService.IEntityService.EndsetContainer(System.IAsyncResult result) {
            return base.Channel.EndsetContainer(result);
        }
        
        private System.IAsyncResult OnBeginsetContainer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.EntityService.Entity ent = ((Chronocourses.Client.EntityService.Entity)(inValues[0]));
            bool container = ((bool)(inValues[1]));
            return ((Chronocourses.Client.EntityService.IEntityService)(this)).BeginsetContainer(ent, container, callback, asyncState);
        }
        
        private object[] OnEndsetContainer(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.EntityService.IEntityService)(this)).EndsetContainer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsetContainerCompleted(object state) {
            if ((this.setContainerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.setContainerCompleted(this, new setContainerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void setContainerAsync(Chronocourses.Client.EntityService.Entity ent, bool container) {
            this.setContainerAsync(ent, container, null);
        }
        
        public void setContainerAsync(Chronocourses.Client.EntityService.Entity ent, bool container, object userState) {
            if ((this.onBeginsetContainerDelegate == null)) {
                this.onBeginsetContainerDelegate = new BeginOperationDelegate(this.OnBeginsetContainer);
            }
            if ((this.onEndsetContainerDelegate == null)) {
                this.onEndsetContainerDelegate = new EndOperationDelegate(this.OnEndsetContainer);
            }
            if ((this.onsetContainerCompletedDelegate == null)) {
                this.onsetContainerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsetContainerCompleted);
            }
            base.InvokeAsync(this.onBeginsetContainerDelegate, new object[] {
                        ent,
                        container}, this.onEndsetContainerDelegate, this.onsetContainerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.EntityService.IEntityService.BeginGetEntity(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEntity(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Chronocourses.Client.EntityService.Entity Chronocourses.Client.EntityService.IEntityService.EndGetEntity(System.IAsyncResult result) {
            return base.Channel.EndGetEntity(result);
        }
        
        private System.IAsyncResult OnBeginGetEntity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((Chronocourses.Client.EntityService.IEntityService)(this)).BeginGetEntity(id, callback, asyncState);
        }
        
        private object[] OnEndGetEntity(System.IAsyncResult result) {
            Chronocourses.Client.EntityService.Entity retVal = ((Chronocourses.Client.EntityService.IEntityService)(this)).EndGetEntity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEntityCompleted(object state) {
            if ((this.GetEntityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEntityCompleted(this, new GetEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEntityAsync(int id) {
            this.GetEntityAsync(id, null);
        }
        
        public void GetEntityAsync(int id, object userState) {
            if ((this.onBeginGetEntityDelegate == null)) {
                this.onBeginGetEntityDelegate = new BeginOperationDelegate(this.OnBeginGetEntity);
            }
            if ((this.onEndGetEntityDelegate == null)) {
                this.onEndGetEntityDelegate = new EndOperationDelegate(this.OnEndGetEntity);
            }
            if ((this.onGetEntityCompletedDelegate == null)) {
                this.onGetEntityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEntityCompleted);
            }
            base.InvokeAsync(this.onBeginGetEntityDelegate, new object[] {
                        id}, this.onEndGetEntityDelegate, this.onGetEntityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.EntityService.IEntityService.BeginSaveEntity(Chronocourses.Client.EntityService.Entity Entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveEntity(Entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Chronocourses.Client.EntityService.IEntityService.EndSaveEntity(System.IAsyncResult result) {
            base.Channel.EndSaveEntity(result);
        }
        
        private System.IAsyncResult OnBeginSaveEntity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.EntityService.Entity Entity = ((Chronocourses.Client.EntityService.Entity)(inValues[0]));
            return ((Chronocourses.Client.EntityService.IEntityService)(this)).BeginSaveEntity(Entity, callback, asyncState);
        }
        
        private object[] OnEndSaveEntity(System.IAsyncResult result) {
            ((Chronocourses.Client.EntityService.IEntityService)(this)).EndSaveEntity(result);
            return null;
        }
        
        private void OnSaveEntityCompleted(object state) {
            if ((this.SaveEntityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveEntityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveEntityAsync(Chronocourses.Client.EntityService.Entity Entity) {
            this.SaveEntityAsync(Entity, null);
        }
        
        public void SaveEntityAsync(Chronocourses.Client.EntityService.Entity Entity, object userState) {
            if ((this.onBeginSaveEntityDelegate == null)) {
                this.onBeginSaveEntityDelegate = new BeginOperationDelegate(this.OnBeginSaveEntity);
            }
            if ((this.onEndSaveEntityDelegate == null)) {
                this.onEndSaveEntityDelegate = new EndOperationDelegate(this.OnEndSaveEntity);
            }
            if ((this.onSaveEntityCompletedDelegate == null)) {
                this.onSaveEntityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEntityCompleted);
            }
            base.InvokeAsync(this.onBeginSaveEntityDelegate, new object[] {
                        Entity}, this.onEndSaveEntityDelegate, this.onSaveEntityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.EntityService.IEntityService.BeginAddEntity(Chronocourses.Client.EntityService.Entity Entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddEntity(Entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.EntityService.IEntityService.EndAddEntity(System.IAsyncResult result) {
            return base.Channel.EndAddEntity(result);
        }
        
        private System.IAsyncResult OnBeginAddEntity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.EntityService.Entity Entity = ((Chronocourses.Client.EntityService.Entity)(inValues[0]));
            return ((Chronocourses.Client.EntityService.IEntityService)(this)).BeginAddEntity(Entity, callback, asyncState);
        }
        
        private object[] OnEndAddEntity(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.EntityService.IEntityService)(this)).EndAddEntity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddEntityCompleted(object state) {
            if ((this.AddEntityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddEntityCompleted(this, new AddEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddEntityAsync(Chronocourses.Client.EntityService.Entity Entity) {
            this.AddEntityAsync(Entity, null);
        }
        
        public void AddEntityAsync(Chronocourses.Client.EntityService.Entity Entity, object userState) {
            if ((this.onBeginAddEntityDelegate == null)) {
                this.onBeginAddEntityDelegate = new BeginOperationDelegate(this.OnBeginAddEntity);
            }
            if ((this.onEndAddEntityDelegate == null)) {
                this.onEndAddEntityDelegate = new EndOperationDelegate(this.OnEndAddEntity);
            }
            if ((this.onAddEntityCompletedDelegate == null)) {
                this.onAddEntityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddEntityCompleted);
            }
            base.InvokeAsync(this.onBeginAddEntityDelegate, new object[] {
                        Entity}, this.onEndAddEntityDelegate, this.onAddEntityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.EntityService.IEntityService.BeginDeleteEntity(Chronocourses.Client.EntityService.Entity Entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteEntity(Entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.EntityService.IEntityService.EndDeleteEntity(System.IAsyncResult result) {
            return base.Channel.EndDeleteEntity(result);
        }
        
        private System.IAsyncResult OnBeginDeleteEntity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.EntityService.Entity Entity = ((Chronocourses.Client.EntityService.Entity)(inValues[0]));
            return ((Chronocourses.Client.EntityService.IEntityService)(this)).BeginDeleteEntity(Entity, callback, asyncState);
        }
        
        private object[] OnEndDeleteEntity(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.EntityService.IEntityService)(this)).EndDeleteEntity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteEntityCompleted(object state) {
            if ((this.DeleteEntityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteEntityCompleted(this, new DeleteEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteEntityAsync(Chronocourses.Client.EntityService.Entity Entity) {
            this.DeleteEntityAsync(Entity, null);
        }
        
        public void DeleteEntityAsync(Chronocourses.Client.EntityService.Entity Entity, object userState) {
            if ((this.onBeginDeleteEntityDelegate == null)) {
                this.onBeginDeleteEntityDelegate = new BeginOperationDelegate(this.OnBeginDeleteEntity);
            }
            if ((this.onEndDeleteEntityDelegate == null)) {
                this.onEndDeleteEntityDelegate = new EndOperationDelegate(this.OnEndDeleteEntity);
            }
            if ((this.onDeleteEntityCompletedDelegate == null)) {
                this.onDeleteEntityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteEntityCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteEntityDelegate, new object[] {
                        Entity}, this.onEndDeleteEntityDelegate, this.onDeleteEntityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.EntityService.IEntityService.BeginSaveEntitys(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveEntitys(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Chronocourses.Client.EntityService.IEntityService.EndSaveEntitys(System.IAsyncResult result) {
            base.Channel.EndSaveEntitys(result);
        }
        
        private System.IAsyncResult OnBeginSaveEntitys(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Chronocourses.Client.EntityService.IEntityService)(this)).BeginSaveEntitys(callback, asyncState);
        }
        
        private object[] OnEndSaveEntitys(System.IAsyncResult result) {
            ((Chronocourses.Client.EntityService.IEntityService)(this)).EndSaveEntitys(result);
            return null;
        }
        
        private void OnSaveEntitysCompleted(object state) {
            if ((this.SaveEntitysCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveEntitysCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveEntitysAsync() {
            this.SaveEntitysAsync(null);
        }
        
        public void SaveEntitysAsync(object userState) {
            if ((this.onBeginSaveEntitysDelegate == null)) {
                this.onBeginSaveEntitysDelegate = new BeginOperationDelegate(this.OnBeginSaveEntitys);
            }
            if ((this.onEndSaveEntitysDelegate == null)) {
                this.onEndSaveEntitysDelegate = new EndOperationDelegate(this.OnEndSaveEntitys);
            }
            if ((this.onSaveEntitysCompletedDelegate == null)) {
                this.onSaveEntitysCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEntitysCompleted);
            }
            base.InvokeAsync(this.onBeginSaveEntitysDelegate, null, this.onEndSaveEntitysDelegate, this.onSaveEntitysCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Chronocourses.Client.EntityService.IEntityService CreateChannel() {
            return new EntityServiceClientChannel(this);
        }
        
        private class EntityServiceClientChannel : ChannelBase<Chronocourses.Client.EntityService.IEntityService>, Chronocourses.Client.EntityService.IEntityService {
            
            public EntityServiceClientChannel(System.ServiceModel.ClientBase<Chronocourses.Client.EntityService.IEntityService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetEntitys(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetEntitys", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Entity> EndGetEntitys(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Entity> _result = ((System.Collections.ObjectModel.ObservableCollection<Chronocourses.Client.EntityService.Entity>)(base.EndInvoke("GetEntitys", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginaddProductToContainer(Chronocourses.Client.EntityService.Product product, Chronocourses.Client.EntityService.Entity ent, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = product;
                _args[1] = ent;
                System.IAsyncResult _result = base.BeginInvoke("addProductToContainer", _args, callback, asyncState);
                return _result;
            }
            
            public int EndaddProductToContainer(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("addProductToContainer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveProductFromContainer(Chronocourses.Client.EntityService.Product product, Chronocourses.Client.EntityService.Entity ent, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = product;
                _args[1] = ent;
                System.IAsyncResult _result = base.BeginInvoke("RemoveProductFromContainer", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRemoveProductFromContainer(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RemoveProductFromContainer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveAllProductsFromContainer(Chronocourses.Client.EntityService.Entity ent, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ent;
                System.IAsyncResult _result = base.BeginInvoke("RemoveAllProductsFromContainer", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRemoveAllProductsFromContainer(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RemoveAllProductsFromContainer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginsetContainer(Chronocourses.Client.EntityService.Entity ent, bool container, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ent;
                _args[1] = container;
                System.IAsyncResult _result = base.BeginInvoke("setContainer", _args, callback, asyncState);
                return _result;
            }
            
            public int EndsetContainer(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("setContainer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEntity(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetEntity", _args, callback, asyncState);
                return _result;
            }
            
            public Chronocourses.Client.EntityService.Entity EndGetEntity(System.IAsyncResult result) {
                object[] _args = new object[0];
                Chronocourses.Client.EntityService.Entity _result = ((Chronocourses.Client.EntityService.Entity)(base.EndInvoke("GetEntity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveEntity(Chronocourses.Client.EntityService.Entity Entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Entity;
                System.IAsyncResult _result = base.BeginInvoke("SaveEntity", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveEntity(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveEntity", _args, result);
            }
            
            public System.IAsyncResult BeginAddEntity(Chronocourses.Client.EntityService.Entity Entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Entity;
                System.IAsyncResult _result = base.BeginInvoke("AddEntity", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAddEntity(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AddEntity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteEntity(Chronocourses.Client.EntityService.Entity Entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Entity;
                System.IAsyncResult _result = base.BeginInvoke("DeleteEntity", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeleteEntity(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeleteEntity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveEntitys(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("SaveEntitys", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveEntitys(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveEntitys", _args, result);
            }
        }
    }
}
