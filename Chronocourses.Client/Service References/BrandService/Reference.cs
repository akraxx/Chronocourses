//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18046
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Chronocourses.Client.BrandService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Brand", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Brand : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.BrandService.ObjectChangeTracker ChangeTrackerField;
        
        private int IDField;
        
        private string NameField;
        
        private System.Collections.Generic.List<Chronocourses.Client.BrandService.Product> ProductField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chronocourses.Client.BrandService.Product> Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectChangeTracker", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class ObjectChangeTracker : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.BrandService.ExtendedPropertiesDictionary ExtendedPropertiesField;
        
        private Chronocourses.Client.BrandService.ObjectsAddedToCollectionProperties ObjectsAddedToCollectionPropertiesField;
        
        private Chronocourses.Client.BrandService.ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionPropertiesField;
        
        private Chronocourses.Client.BrandService.OriginalValuesDictionary OriginalValuesField;
        
        private Chronocourses.Client.BrandService.ObjectState StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.ExtendedPropertiesDictionary ExtendedProperties {
            get {
                return this.ExtendedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedPropertiesField, value) != true)) {
                    this.ExtendedPropertiesField = value;
                    this.RaisePropertyChanged("ExtendedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.ObjectsAddedToCollectionProperties ObjectsAddedToCollectionProperties {
            get {
                return this.ObjectsAddedToCollectionPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsAddedToCollectionPropertiesField, value) != true)) {
                    this.ObjectsAddedToCollectionPropertiesField = value;
                    this.RaisePropertyChanged("ObjectsAddedToCollectionProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionProperties {
            get {
                return this.ObjectsRemovedFromCollectionPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsRemovedFromCollectionPropertiesField, value) != true)) {
                    this.ObjectsRemovedFromCollectionPropertiesField = value;
                    this.RaisePropertyChanged("ObjectsRemovedFromCollectionProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.OriginalValuesDictionary OriginalValues {
            get {
                return this.OriginalValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalValuesField, value) != true)) {
                    this.OriginalValuesField = value;
                    this.RaisePropertyChanged("OriginalValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.ObjectState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Product : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AvailableField;
        
        private Chronocourses.Client.BrandService.Brand BrandField;
        
        private int BrandIDField;
        
        private Chronocourses.Client.BrandService.ObjectChangeTracker ChangeTrackerField;
        
        private string DescriptionField;
        
        private System.Collections.Generic.List<Chronocourses.Client.BrandService.Entity> EntityField;
        
        private int IDField;
        
        private string NameField;
        
        private double PriceField;
        
        private Chronocourses.Client.BrandService.TypeProduct TypeProductField;
        
        private int TypeProductIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.Brand Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrandID {
            get {
                return this.BrandIDField;
            }
            set {
                if ((this.BrandIDField.Equals(value) != true)) {
                    this.BrandIDField = value;
                    this.RaisePropertyChanged("BrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chronocourses.Client.BrandService.Entity> Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.TypeProduct TypeProduct {
            get {
                return this.TypeProductField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeProductField, value) != true)) {
                    this.TypeProductField = value;
                    this.RaisePropertyChanged("TypeProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeProductID {
            get {
                return this.TypeProductIDField;
            }
            set {
                if ((this.TypeProductIDField.Equals(value) != true)) {
                    this.TypeProductIDField = value;
                    this.RaisePropertyChanged("TypeProductID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExtendedPropertiesDictionary", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="ExtendedProperties", KeyName="Name", ValueName="ExtendedProperty")]
    public class ExtendedPropertiesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsAddedToCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="AddedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="AddedObjects")]
    public class ObjectsAddedToCollectionProperties : System.Collections.Generic.Dictionary<string, Chronocourses.Client.BrandService.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsRemovedFromCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="DeletedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="DeletedObjects")]
    public class ObjectsRemovedFromCollectionProperties : System.Collections.Generic.Dictionary<string, Chronocourses.Client.BrandService.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OriginalValuesDictionary", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="OriginalValues", KeyName="Name", ValueName="OriginalValue")]
    public class OriginalValuesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectState", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model")]
    public enum ObjectState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unchanged = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Added = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modified = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectList", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="ObjectValue")]
    public class ObjectList : System.Collections.Generic.List<object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeProduct", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class TypeProduct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.BrandService.ObjectChangeTracker ChangeTrackerField;
        
        private int IDField;
        
        private string LabelField;
        
        private System.Collections.Generic.List<Chronocourses.Client.BrandService.Product> ProductField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chronocourses.Client.BrandService.Product> Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entity", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Entity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.BrandService.ObjectChangeTracker ChangeTrackerField;
        
        private bool ContainerField;
        
        private int IDField;
        
        private string LabelField;
        
        private int PositionXField;
        
        private int PositionYField;
        
        private System.Collections.Generic.List<Chronocourses.Client.BrandService.Product> ProductField;
        
        private Chronocourses.Client.BrandService.Shop ShopField;
        
        private int ShopIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Container {
            get {
                return this.ContainerField;
            }
            set {
                if ((this.ContainerField.Equals(value) != true)) {
                    this.ContainerField = value;
                    this.RaisePropertyChanged("Container");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PositionX {
            get {
                return this.PositionXField;
            }
            set {
                if ((this.PositionXField.Equals(value) != true)) {
                    this.PositionXField = value;
                    this.RaisePropertyChanged("PositionX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PositionY {
            get {
                return this.PositionYField;
            }
            set {
                if ((this.PositionYField.Equals(value) != true)) {
                    this.PositionYField = value;
                    this.RaisePropertyChanged("PositionY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chronocourses.Client.BrandService.Product> Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.Shop Shop {
            get {
                return this.ShopField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopField, value) != true)) {
                    this.ShopField = value;
                    this.RaisePropertyChanged("Shop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShopID {
            get {
                return this.ShopIDField;
            }
            set {
                if ((this.ShopIDField.Equals(value) != true)) {
                    this.ShopIDField = value;
                    this.RaisePropertyChanged("ShopID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shop", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Shop : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.BrandService.Address AddressField;
        
        private int AddressIDField;
        
        private Chronocourses.Client.BrandService.ObjectChangeTracker ChangeTrackerField;
        
        private System.Collections.Generic.List<Chronocourses.Client.BrandService.Entity> EntityField;
        
        private short HeightField;
        
        private int IDField;
        
        private string NameField;
        
        private short WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chronocourses.Client.BrandService.Entity> Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Address : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.BrandService.ObjectChangeTracker ChangeTrackerField;
        
        private string CityField;
        
        private string CountryField;
        
        private int IDField;
        
        private short NumberField;
        
        private System.Collections.Generic.List<Chronocourses.Client.BrandService.Shop> ShopField;
        
        private string StreetField;
        
        private int ZipCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.BrandService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chronocourses.Client.BrandService.Shop> Shop {
            get {
                return this.ShopField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopField, value) != true)) {
                    this.ShopField = value;
                    this.RaisePropertyChanged("Shop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((this.ZipCodeField.Equals(value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BrandService.IBrandService")]
    public interface IBrandService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBrandService/GetBrands", ReplyAction="http://tempuri.org/IBrandService/GetBrandsResponse")]
        System.IAsyncResult BeginGetBrands(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Chronocourses.Client.BrandService.Brand> EndGetBrands(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBrandService/GetBrand", ReplyAction="http://tempuri.org/IBrandService/GetBrandResponse")]
        System.IAsyncResult BeginGetBrand(int id, System.AsyncCallback callback, object asyncState);
        
        Chronocourses.Client.BrandService.Brand EndGetBrand(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBrandService/SaveBrand", ReplyAction="http://tempuri.org/IBrandService/SaveBrandResponse")]
        System.IAsyncResult BeginSaveBrand(Chronocourses.Client.BrandService.Brand brand, System.AsyncCallback callback, object asyncState);
        
        int EndSaveBrand(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBrandService/AddBrand", ReplyAction="http://tempuri.org/IBrandService/AddBrandResponse")]
        System.IAsyncResult BeginAddBrand(Chronocourses.Client.BrandService.Brand brand, System.AsyncCallback callback, object asyncState);
        
        int EndAddBrand(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBrandService/DeleteBrand", ReplyAction="http://tempuri.org/IBrandService/DeleteBrandResponse")]
        System.IAsyncResult BeginDeleteBrand(Chronocourses.Client.BrandService.Brand brand, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteBrand(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBrandServiceChannel : Chronocourses.Client.BrandService.IBrandService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBrandsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBrandsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Chronocourses.Client.BrandService.Brand> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Chronocourses.Client.BrandService.Brand>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBrandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBrandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Chronocourses.Client.BrandService.Brand Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Chronocourses.Client.BrandService.Brand)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveBrandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveBrandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddBrandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddBrandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteBrandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteBrandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BrandServiceClient : System.ServiceModel.ClientBase<Chronocourses.Client.BrandService.IBrandService>, Chronocourses.Client.BrandService.IBrandService {
        
        private BeginOperationDelegate onBeginGetBrandsDelegate;
        
        private EndOperationDelegate onEndGetBrandsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBrandsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBrandDelegate;
        
        private EndOperationDelegate onEndGetBrandDelegate;
        
        private System.Threading.SendOrPostCallback onGetBrandCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveBrandDelegate;
        
        private EndOperationDelegate onEndSaveBrandDelegate;
        
        private System.Threading.SendOrPostCallback onSaveBrandCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddBrandDelegate;
        
        private EndOperationDelegate onEndAddBrandDelegate;
        
        private System.Threading.SendOrPostCallback onAddBrandCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteBrandDelegate;
        
        private EndOperationDelegate onEndDeleteBrandDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteBrandCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public BrandServiceClient() {
        }
        
        public BrandServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BrandServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BrandServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BrandServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetBrandsCompletedEventArgs> GetBrandsCompleted;
        
        public event System.EventHandler<GetBrandCompletedEventArgs> GetBrandCompleted;
        
        public event System.EventHandler<SaveBrandCompletedEventArgs> SaveBrandCompleted;
        
        public event System.EventHandler<AddBrandCompletedEventArgs> AddBrandCompleted;
        
        public event System.EventHandler<DeleteBrandCompletedEventArgs> DeleteBrandCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.BrandService.IBrandService.BeginGetBrands(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBrands(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Chronocourses.Client.BrandService.Brand> Chronocourses.Client.BrandService.IBrandService.EndGetBrands(System.IAsyncResult result) {
            return base.Channel.EndGetBrands(result);
        }
        
        private System.IAsyncResult OnBeginGetBrands(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Chronocourses.Client.BrandService.IBrandService)(this)).BeginGetBrands(callback, asyncState);
        }
        
        private object[] OnEndGetBrands(System.IAsyncResult result) {
            System.Collections.Generic.List<Chronocourses.Client.BrandService.Brand> retVal = ((Chronocourses.Client.BrandService.IBrandService)(this)).EndGetBrands(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBrandsCompleted(object state) {
            if ((this.GetBrandsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBrandsCompleted(this, new GetBrandsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBrandsAsync() {
            this.GetBrandsAsync(null);
        }
        
        public void GetBrandsAsync(object userState) {
            if ((this.onBeginGetBrandsDelegate == null)) {
                this.onBeginGetBrandsDelegate = new BeginOperationDelegate(this.OnBeginGetBrands);
            }
            if ((this.onEndGetBrandsDelegate == null)) {
                this.onEndGetBrandsDelegate = new EndOperationDelegate(this.OnEndGetBrands);
            }
            if ((this.onGetBrandsCompletedDelegate == null)) {
                this.onGetBrandsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBrandsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBrandsDelegate, null, this.onEndGetBrandsDelegate, this.onGetBrandsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.BrandService.IBrandService.BeginGetBrand(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBrand(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Chronocourses.Client.BrandService.Brand Chronocourses.Client.BrandService.IBrandService.EndGetBrand(System.IAsyncResult result) {
            return base.Channel.EndGetBrand(result);
        }
        
        private System.IAsyncResult OnBeginGetBrand(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((Chronocourses.Client.BrandService.IBrandService)(this)).BeginGetBrand(id, callback, asyncState);
        }
        
        private object[] OnEndGetBrand(System.IAsyncResult result) {
            Chronocourses.Client.BrandService.Brand retVal = ((Chronocourses.Client.BrandService.IBrandService)(this)).EndGetBrand(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBrandCompleted(object state) {
            if ((this.GetBrandCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBrandCompleted(this, new GetBrandCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBrandAsync(int id) {
            this.GetBrandAsync(id, null);
        }
        
        public void GetBrandAsync(int id, object userState) {
            if ((this.onBeginGetBrandDelegate == null)) {
                this.onBeginGetBrandDelegate = new BeginOperationDelegate(this.OnBeginGetBrand);
            }
            if ((this.onEndGetBrandDelegate == null)) {
                this.onEndGetBrandDelegate = new EndOperationDelegate(this.OnEndGetBrand);
            }
            if ((this.onGetBrandCompletedDelegate == null)) {
                this.onGetBrandCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBrandCompleted);
            }
            base.InvokeAsync(this.onBeginGetBrandDelegate, new object[] {
                        id}, this.onEndGetBrandDelegate, this.onGetBrandCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.BrandService.IBrandService.BeginSaveBrand(Chronocourses.Client.BrandService.Brand brand, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveBrand(brand, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.BrandService.IBrandService.EndSaveBrand(System.IAsyncResult result) {
            return base.Channel.EndSaveBrand(result);
        }
        
        private System.IAsyncResult OnBeginSaveBrand(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.BrandService.Brand brand = ((Chronocourses.Client.BrandService.Brand)(inValues[0]));
            return ((Chronocourses.Client.BrandService.IBrandService)(this)).BeginSaveBrand(brand, callback, asyncState);
        }
        
        private object[] OnEndSaveBrand(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.BrandService.IBrandService)(this)).EndSaveBrand(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveBrandCompleted(object state) {
            if ((this.SaveBrandCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveBrandCompleted(this, new SaveBrandCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveBrandAsync(Chronocourses.Client.BrandService.Brand brand) {
            this.SaveBrandAsync(brand, null);
        }
        
        public void SaveBrandAsync(Chronocourses.Client.BrandService.Brand brand, object userState) {
            if ((this.onBeginSaveBrandDelegate == null)) {
                this.onBeginSaveBrandDelegate = new BeginOperationDelegate(this.OnBeginSaveBrand);
            }
            if ((this.onEndSaveBrandDelegate == null)) {
                this.onEndSaveBrandDelegate = new EndOperationDelegate(this.OnEndSaveBrand);
            }
            if ((this.onSaveBrandCompletedDelegate == null)) {
                this.onSaveBrandCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveBrandCompleted);
            }
            base.InvokeAsync(this.onBeginSaveBrandDelegate, new object[] {
                        brand}, this.onEndSaveBrandDelegate, this.onSaveBrandCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.BrandService.IBrandService.BeginAddBrand(Chronocourses.Client.BrandService.Brand brand, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddBrand(brand, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.BrandService.IBrandService.EndAddBrand(System.IAsyncResult result) {
            return base.Channel.EndAddBrand(result);
        }
        
        private System.IAsyncResult OnBeginAddBrand(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.BrandService.Brand brand = ((Chronocourses.Client.BrandService.Brand)(inValues[0]));
            return ((Chronocourses.Client.BrandService.IBrandService)(this)).BeginAddBrand(brand, callback, asyncState);
        }
        
        private object[] OnEndAddBrand(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.BrandService.IBrandService)(this)).EndAddBrand(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddBrandCompleted(object state) {
            if ((this.AddBrandCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddBrandCompleted(this, new AddBrandCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddBrandAsync(Chronocourses.Client.BrandService.Brand brand) {
            this.AddBrandAsync(brand, null);
        }
        
        public void AddBrandAsync(Chronocourses.Client.BrandService.Brand brand, object userState) {
            if ((this.onBeginAddBrandDelegate == null)) {
                this.onBeginAddBrandDelegate = new BeginOperationDelegate(this.OnBeginAddBrand);
            }
            if ((this.onEndAddBrandDelegate == null)) {
                this.onEndAddBrandDelegate = new EndOperationDelegate(this.OnEndAddBrand);
            }
            if ((this.onAddBrandCompletedDelegate == null)) {
                this.onAddBrandCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddBrandCompleted);
            }
            base.InvokeAsync(this.onBeginAddBrandDelegate, new object[] {
                        brand}, this.onEndAddBrandDelegate, this.onAddBrandCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.BrandService.IBrandService.BeginDeleteBrand(Chronocourses.Client.BrandService.Brand brand, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteBrand(brand, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.BrandService.IBrandService.EndDeleteBrand(System.IAsyncResult result) {
            return base.Channel.EndDeleteBrand(result);
        }
        
        private System.IAsyncResult OnBeginDeleteBrand(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.BrandService.Brand brand = ((Chronocourses.Client.BrandService.Brand)(inValues[0]));
            return ((Chronocourses.Client.BrandService.IBrandService)(this)).BeginDeleteBrand(brand, callback, asyncState);
        }
        
        private object[] OnEndDeleteBrand(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.BrandService.IBrandService)(this)).EndDeleteBrand(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteBrandCompleted(object state) {
            if ((this.DeleteBrandCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteBrandCompleted(this, new DeleteBrandCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteBrandAsync(Chronocourses.Client.BrandService.Brand brand) {
            this.DeleteBrandAsync(brand, null);
        }
        
        public void DeleteBrandAsync(Chronocourses.Client.BrandService.Brand brand, object userState) {
            if ((this.onBeginDeleteBrandDelegate == null)) {
                this.onBeginDeleteBrandDelegate = new BeginOperationDelegate(this.OnBeginDeleteBrand);
            }
            if ((this.onEndDeleteBrandDelegate == null)) {
                this.onEndDeleteBrandDelegate = new EndOperationDelegate(this.OnEndDeleteBrand);
            }
            if ((this.onDeleteBrandCompletedDelegate == null)) {
                this.onDeleteBrandCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteBrandCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteBrandDelegate, new object[] {
                        brand}, this.onEndDeleteBrandDelegate, this.onDeleteBrandCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Chronocourses.Client.BrandService.IBrandService CreateChannel() {
            return new BrandServiceClientChannel(this);
        }
        
        private class BrandServiceClientChannel : ChannelBase<Chronocourses.Client.BrandService.IBrandService>, Chronocourses.Client.BrandService.IBrandService {
            
            public BrandServiceClientChannel(System.ServiceModel.ClientBase<Chronocourses.Client.BrandService.IBrandService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetBrands(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBrands", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Chronocourses.Client.BrandService.Brand> EndGetBrands(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Chronocourses.Client.BrandService.Brand> _result = ((System.Collections.Generic.List<Chronocourses.Client.BrandService.Brand>)(base.EndInvoke("GetBrands", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBrand(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetBrand", _args, callback, asyncState);
                return _result;
            }
            
            public Chronocourses.Client.BrandService.Brand EndGetBrand(System.IAsyncResult result) {
                object[] _args = new object[0];
                Chronocourses.Client.BrandService.Brand _result = ((Chronocourses.Client.BrandService.Brand)(base.EndInvoke("GetBrand", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveBrand(Chronocourses.Client.BrandService.Brand brand, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = brand;
                System.IAsyncResult _result = base.BeginInvoke("SaveBrand", _args, callback, asyncState);
                return _result;
            }
            
            public int EndSaveBrand(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("SaveBrand", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddBrand(Chronocourses.Client.BrandService.Brand brand, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = brand;
                System.IAsyncResult _result = base.BeginInvoke("AddBrand", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAddBrand(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AddBrand", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteBrand(Chronocourses.Client.BrandService.Brand brand, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = brand;
                System.IAsyncResult _result = base.BeginInvoke("DeleteBrand", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeleteBrand(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeleteBrand", _args, result)));
                return _result;
            }
        }
    }
}
