//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18046
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Chronocourses.Client.TypeProductService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeProduct", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class TypeProduct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.TypeProductService.ObjectChangeTracker ChangeTrackerField;
        
        private int IDField;
        
        private string LabelField;
        
        private System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Product> ProductField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Product> Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectChangeTracker", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class ObjectChangeTracker : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.TypeProductService.ExtendedPropertiesDictionary ExtendedPropertiesField;
        
        private Chronocourses.Client.TypeProductService.ObjectsAddedToCollectionProperties ObjectsAddedToCollectionPropertiesField;
        
        private Chronocourses.Client.TypeProductService.ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionPropertiesField;
        
        private Chronocourses.Client.TypeProductService.OriginalValuesDictionary OriginalValuesField;
        
        private Chronocourses.Client.TypeProductService.ObjectState StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.ExtendedPropertiesDictionary ExtendedProperties {
            get {
                return this.ExtendedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedPropertiesField, value) != true)) {
                    this.ExtendedPropertiesField = value;
                    this.RaisePropertyChanged("ExtendedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.ObjectsAddedToCollectionProperties ObjectsAddedToCollectionProperties {
            get {
                return this.ObjectsAddedToCollectionPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsAddedToCollectionPropertiesField, value) != true)) {
                    this.ObjectsAddedToCollectionPropertiesField = value;
                    this.RaisePropertyChanged("ObjectsAddedToCollectionProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionProperties {
            get {
                return this.ObjectsRemovedFromCollectionPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsRemovedFromCollectionPropertiesField, value) != true)) {
                    this.ObjectsRemovedFromCollectionPropertiesField = value;
                    this.RaisePropertyChanged("ObjectsRemovedFromCollectionProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.OriginalValuesDictionary OriginalValues {
            get {
                return this.OriginalValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalValuesField, value) != true)) {
                    this.OriginalValuesField = value;
                    this.RaisePropertyChanged("OriginalValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.ObjectState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Product : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AvailableField;
        
        private Chronocourses.Client.TypeProductService.Brand BrandField;
        
        private int BrandIDField;
        
        private Chronocourses.Client.TypeProductService.ObjectChangeTracker ChangeTrackerField;
        
        private string DescriptionField;
        
        private System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Entity> EntityField;
        
        private int IDField;
        
        private string NameField;
        
        private double PriceField;
        
        private Chronocourses.Client.TypeProductService.TypeProduct TypeProductField;
        
        private int TypeProductIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.Brand Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrandID {
            get {
                return this.BrandIDField;
            }
            set {
                if ((this.BrandIDField.Equals(value) != true)) {
                    this.BrandIDField = value;
                    this.RaisePropertyChanged("BrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Entity> Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.TypeProduct TypeProduct {
            get {
                return this.TypeProductField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeProductField, value) != true)) {
                    this.TypeProductField = value;
                    this.RaisePropertyChanged("TypeProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeProductID {
            get {
                return this.TypeProductIDField;
            }
            set {
                if ((this.TypeProductIDField.Equals(value) != true)) {
                    this.TypeProductIDField = value;
                    this.RaisePropertyChanged("TypeProductID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExtendedPropertiesDictionary", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="ExtendedProperties", KeyName="Name", ValueName="ExtendedProperty")]
    public class ExtendedPropertiesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsAddedToCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="AddedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="AddedObjects")]
    public class ObjectsAddedToCollectionProperties : System.Collections.Generic.Dictionary<string, Chronocourses.Client.TypeProductService.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsRemovedFromCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="DeletedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="DeletedObjects")]
    public class ObjectsRemovedFromCollectionProperties : System.Collections.Generic.Dictionary<string, Chronocourses.Client.TypeProductService.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OriginalValuesDictionary", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="OriginalValues", KeyName="Name", ValueName="OriginalValue")]
    public class OriginalValuesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectState", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model")]
    public enum ObjectState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unchanged = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Added = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modified = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectList", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", ItemName="ObjectValue")]
    public class ObjectList : System.Collections.Generic.List<object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Brand", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Brand : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.TypeProductService.ObjectChangeTracker ChangeTrackerField;
        
        private int IDField;
        
        private string NameField;
        
        private System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Product> ProductField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Product> Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entity", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Entity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.TypeProductService.ObjectChangeTracker ChangeTrackerField;
        
        private bool ContainerField;
        
        private int IDField;
        
        private string LabelField;
        
        private int PositionXField;
        
        private int PositionYField;
        
        private System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Product> ProductField;
        
        private Chronocourses.Client.TypeProductService.Shop ShopField;
        
        private int ShopIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Container {
            get {
                return this.ContainerField;
            }
            set {
                if ((this.ContainerField.Equals(value) != true)) {
                    this.ContainerField = value;
                    this.RaisePropertyChanged("Container");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PositionX {
            get {
                return this.PositionXField;
            }
            set {
                if ((this.PositionXField.Equals(value) != true)) {
                    this.PositionXField = value;
                    this.RaisePropertyChanged("PositionX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PositionY {
            get {
                return this.PositionYField;
            }
            set {
                if ((this.PositionYField.Equals(value) != true)) {
                    this.PositionYField = value;
                    this.RaisePropertyChanged("PositionY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Product> Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.Shop Shop {
            get {
                return this.ShopField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopField, value) != true)) {
                    this.ShopField = value;
                    this.RaisePropertyChanged("Shop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShopID {
            get {
                return this.ShopIDField;
            }
            set {
                if ((this.ShopIDField.Equals(value) != true)) {
                    this.ShopIDField = value;
                    this.RaisePropertyChanged("ShopID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shop", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Shop : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.TypeProductService.Address AddressField;
        
        private int AddressIDField;
        
        private Chronocourses.Client.TypeProductService.ObjectChangeTracker ChangeTrackerField;
        
        private System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Entity> EntityField;
        
        private short HeightField;
        
        private int IDField;
        
        private string NameField;
        
        private short WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Entity> Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/Chronocourses.Model", IsReference=true)]
    public partial class Address : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Chronocourses.Client.TypeProductService.ObjectChangeTracker ChangeTrackerField;
        
        private string CityField;
        
        private string CountryField;
        
        private int IDField;
        
        private short NumberField;
        
        private System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Shop> ShopField;
        
        private string StreetField;
        
        private int ZipCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chronocourses.Client.TypeProductService.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Shop> Shop {
            get {
                return this.ShopField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopField, value) != true)) {
                    this.ShopField = value;
                    this.RaisePropertyChanged("Shop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((this.ZipCodeField.Equals(value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TypeProductService.ITypeProductService")]
    public interface ITypeProductService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITypeProductService/GetTypeProducts", ReplyAction="http://tempuri.org/ITypeProductService/GetTypeProductsResponse")]
        System.IAsyncResult BeginGetTypeProducts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Chronocourses.Client.TypeProductService.TypeProduct> EndGetTypeProducts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITypeProductService/GetProductsByTypeProduct", ReplyAction="http://tempuri.org/ITypeProductService/GetProductsByTypeProductResponse")]
        System.IAsyncResult BeginGetProductsByTypeProduct(int typeProductId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Product> EndGetProductsByTypeProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITypeProductService/GetTypeProduct", ReplyAction="http://tempuri.org/ITypeProductService/GetTypeProductResponse")]
        System.IAsyncResult BeginGetTypeProduct(int id, System.AsyncCallback callback, object asyncState);
        
        Chronocourses.Client.TypeProductService.TypeProduct EndGetTypeProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITypeProductService/SaveTypeProduct", ReplyAction="http://tempuri.org/ITypeProductService/SaveTypeProductResponse")]
        System.IAsyncResult BeginSaveTypeProduct(Chronocourses.Client.TypeProductService.TypeProduct typeProduct, System.AsyncCallback callback, object asyncState);
        
        int EndSaveTypeProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITypeProductService/AddTypeProduct", ReplyAction="http://tempuri.org/ITypeProductService/AddTypeProductResponse")]
        System.IAsyncResult BeginAddTypeProduct(Chronocourses.Client.TypeProductService.TypeProduct typeProduct, System.AsyncCallback callback, object asyncState);
        
        int EndAddTypeProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITypeProductService/DeleteTypeProduct", ReplyAction="http://tempuri.org/ITypeProductService/DeleteTypeProductResponse")]
        System.IAsyncResult BeginDeleteTypeProduct(Chronocourses.Client.TypeProductService.TypeProduct typeProduct, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteTypeProduct(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITypeProductServiceChannel : Chronocourses.Client.TypeProductService.ITypeProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTypeProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTypeProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Chronocourses.Client.TypeProductService.TypeProduct> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Chronocourses.Client.TypeProductService.TypeProduct>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductsByTypeProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductsByTypeProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Product> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Product>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTypeProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTypeProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Chronocourses.Client.TypeProductService.TypeProduct Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Chronocourses.Client.TypeProductService.TypeProduct)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveTypeProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveTypeProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddTypeProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddTypeProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteTypeProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteTypeProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TypeProductServiceClient : System.ServiceModel.ClientBase<Chronocourses.Client.TypeProductService.ITypeProductService>, Chronocourses.Client.TypeProductService.ITypeProductService {
        
        private BeginOperationDelegate onBeginGetTypeProductsDelegate;
        
        private EndOperationDelegate onEndGetTypeProductsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTypeProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductsByTypeProductDelegate;
        
        private EndOperationDelegate onEndGetProductsByTypeProductDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductsByTypeProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTypeProductDelegate;
        
        private EndOperationDelegate onEndGetTypeProductDelegate;
        
        private System.Threading.SendOrPostCallback onGetTypeProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveTypeProductDelegate;
        
        private EndOperationDelegate onEndSaveTypeProductDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTypeProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddTypeProductDelegate;
        
        private EndOperationDelegate onEndAddTypeProductDelegate;
        
        private System.Threading.SendOrPostCallback onAddTypeProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTypeProductDelegate;
        
        private EndOperationDelegate onEndDeleteTypeProductDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTypeProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TypeProductServiceClient() {
        }
        
        public TypeProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TypeProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TypeProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TypeProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetTypeProductsCompletedEventArgs> GetTypeProductsCompleted;
        
        public event System.EventHandler<GetProductsByTypeProductCompletedEventArgs> GetProductsByTypeProductCompleted;
        
        public event System.EventHandler<GetTypeProductCompletedEventArgs> GetTypeProductCompleted;
        
        public event System.EventHandler<SaveTypeProductCompletedEventArgs> SaveTypeProductCompleted;
        
        public event System.EventHandler<AddTypeProductCompletedEventArgs> AddTypeProductCompleted;
        
        public event System.EventHandler<DeleteTypeProductCompletedEventArgs> DeleteTypeProductCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.TypeProductService.ITypeProductService.BeginGetTypeProducts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTypeProducts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Chronocourses.Client.TypeProductService.TypeProduct> Chronocourses.Client.TypeProductService.ITypeProductService.EndGetTypeProducts(System.IAsyncResult result) {
            return base.Channel.EndGetTypeProducts(result);
        }
        
        private System.IAsyncResult OnBeginGetTypeProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Chronocourses.Client.TypeProductService.ITypeProductService)(this)).BeginGetTypeProducts(callback, asyncState);
        }
        
        private object[] OnEndGetTypeProducts(System.IAsyncResult result) {
            System.Collections.Generic.List<Chronocourses.Client.TypeProductService.TypeProduct> retVal = ((Chronocourses.Client.TypeProductService.ITypeProductService)(this)).EndGetTypeProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTypeProductsCompleted(object state) {
            if ((this.GetTypeProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTypeProductsCompleted(this, new GetTypeProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTypeProductsAsync() {
            this.GetTypeProductsAsync(null);
        }
        
        public void GetTypeProductsAsync(object userState) {
            if ((this.onBeginGetTypeProductsDelegate == null)) {
                this.onBeginGetTypeProductsDelegate = new BeginOperationDelegate(this.OnBeginGetTypeProducts);
            }
            if ((this.onEndGetTypeProductsDelegate == null)) {
                this.onEndGetTypeProductsDelegate = new EndOperationDelegate(this.OnEndGetTypeProducts);
            }
            if ((this.onGetTypeProductsCompletedDelegate == null)) {
                this.onGetTypeProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTypeProductsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTypeProductsDelegate, null, this.onEndGetTypeProductsDelegate, this.onGetTypeProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.TypeProductService.ITypeProductService.BeginGetProductsByTypeProduct(int typeProductId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductsByTypeProduct(typeProductId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Product> Chronocourses.Client.TypeProductService.ITypeProductService.EndGetProductsByTypeProduct(System.IAsyncResult result) {
            return base.Channel.EndGetProductsByTypeProduct(result);
        }
        
        private System.IAsyncResult OnBeginGetProductsByTypeProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int typeProductId = ((int)(inValues[0]));
            return ((Chronocourses.Client.TypeProductService.ITypeProductService)(this)).BeginGetProductsByTypeProduct(typeProductId, callback, asyncState);
        }
        
        private object[] OnEndGetProductsByTypeProduct(System.IAsyncResult result) {
            System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Product> retVal = ((Chronocourses.Client.TypeProductService.ITypeProductService)(this)).EndGetProductsByTypeProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductsByTypeProductCompleted(object state) {
            if ((this.GetProductsByTypeProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductsByTypeProductCompleted(this, new GetProductsByTypeProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductsByTypeProductAsync(int typeProductId) {
            this.GetProductsByTypeProductAsync(typeProductId, null);
        }
        
        public void GetProductsByTypeProductAsync(int typeProductId, object userState) {
            if ((this.onBeginGetProductsByTypeProductDelegate == null)) {
                this.onBeginGetProductsByTypeProductDelegate = new BeginOperationDelegate(this.OnBeginGetProductsByTypeProduct);
            }
            if ((this.onEndGetProductsByTypeProductDelegate == null)) {
                this.onEndGetProductsByTypeProductDelegate = new EndOperationDelegate(this.OnEndGetProductsByTypeProduct);
            }
            if ((this.onGetProductsByTypeProductCompletedDelegate == null)) {
                this.onGetProductsByTypeProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductsByTypeProductCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductsByTypeProductDelegate, new object[] {
                        typeProductId}, this.onEndGetProductsByTypeProductDelegate, this.onGetProductsByTypeProductCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.TypeProductService.ITypeProductService.BeginGetTypeProduct(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTypeProduct(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Chronocourses.Client.TypeProductService.TypeProduct Chronocourses.Client.TypeProductService.ITypeProductService.EndGetTypeProduct(System.IAsyncResult result) {
            return base.Channel.EndGetTypeProduct(result);
        }
        
        private System.IAsyncResult OnBeginGetTypeProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((Chronocourses.Client.TypeProductService.ITypeProductService)(this)).BeginGetTypeProduct(id, callback, asyncState);
        }
        
        private object[] OnEndGetTypeProduct(System.IAsyncResult result) {
            Chronocourses.Client.TypeProductService.TypeProduct retVal = ((Chronocourses.Client.TypeProductService.ITypeProductService)(this)).EndGetTypeProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTypeProductCompleted(object state) {
            if ((this.GetTypeProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTypeProductCompleted(this, new GetTypeProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTypeProductAsync(int id) {
            this.GetTypeProductAsync(id, null);
        }
        
        public void GetTypeProductAsync(int id, object userState) {
            if ((this.onBeginGetTypeProductDelegate == null)) {
                this.onBeginGetTypeProductDelegate = new BeginOperationDelegate(this.OnBeginGetTypeProduct);
            }
            if ((this.onEndGetTypeProductDelegate == null)) {
                this.onEndGetTypeProductDelegate = new EndOperationDelegate(this.OnEndGetTypeProduct);
            }
            if ((this.onGetTypeProductCompletedDelegate == null)) {
                this.onGetTypeProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTypeProductCompleted);
            }
            base.InvokeAsync(this.onBeginGetTypeProductDelegate, new object[] {
                        id}, this.onEndGetTypeProductDelegate, this.onGetTypeProductCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.TypeProductService.ITypeProductService.BeginSaveTypeProduct(Chronocourses.Client.TypeProductService.TypeProduct typeProduct, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTypeProduct(typeProduct, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.TypeProductService.ITypeProductService.EndSaveTypeProduct(System.IAsyncResult result) {
            return base.Channel.EndSaveTypeProduct(result);
        }
        
        private System.IAsyncResult OnBeginSaveTypeProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.TypeProductService.TypeProduct typeProduct = ((Chronocourses.Client.TypeProductService.TypeProduct)(inValues[0]));
            return ((Chronocourses.Client.TypeProductService.ITypeProductService)(this)).BeginSaveTypeProduct(typeProduct, callback, asyncState);
        }
        
        private object[] OnEndSaveTypeProduct(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.TypeProductService.ITypeProductService)(this)).EndSaveTypeProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveTypeProductCompleted(object state) {
            if ((this.SaveTypeProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTypeProductCompleted(this, new SaveTypeProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTypeProductAsync(Chronocourses.Client.TypeProductService.TypeProduct typeProduct) {
            this.SaveTypeProductAsync(typeProduct, null);
        }
        
        public void SaveTypeProductAsync(Chronocourses.Client.TypeProductService.TypeProduct typeProduct, object userState) {
            if ((this.onBeginSaveTypeProductDelegate == null)) {
                this.onBeginSaveTypeProductDelegate = new BeginOperationDelegate(this.OnBeginSaveTypeProduct);
            }
            if ((this.onEndSaveTypeProductDelegate == null)) {
                this.onEndSaveTypeProductDelegate = new EndOperationDelegate(this.OnEndSaveTypeProduct);
            }
            if ((this.onSaveTypeProductCompletedDelegate == null)) {
                this.onSaveTypeProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTypeProductCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTypeProductDelegate, new object[] {
                        typeProduct}, this.onEndSaveTypeProductDelegate, this.onSaveTypeProductCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.TypeProductService.ITypeProductService.BeginAddTypeProduct(Chronocourses.Client.TypeProductService.TypeProduct typeProduct, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddTypeProduct(typeProduct, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.TypeProductService.ITypeProductService.EndAddTypeProduct(System.IAsyncResult result) {
            return base.Channel.EndAddTypeProduct(result);
        }
        
        private System.IAsyncResult OnBeginAddTypeProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.TypeProductService.TypeProduct typeProduct = ((Chronocourses.Client.TypeProductService.TypeProduct)(inValues[0]));
            return ((Chronocourses.Client.TypeProductService.ITypeProductService)(this)).BeginAddTypeProduct(typeProduct, callback, asyncState);
        }
        
        private object[] OnEndAddTypeProduct(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.TypeProductService.ITypeProductService)(this)).EndAddTypeProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddTypeProductCompleted(object state) {
            if ((this.AddTypeProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddTypeProductCompleted(this, new AddTypeProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddTypeProductAsync(Chronocourses.Client.TypeProductService.TypeProduct typeProduct) {
            this.AddTypeProductAsync(typeProduct, null);
        }
        
        public void AddTypeProductAsync(Chronocourses.Client.TypeProductService.TypeProduct typeProduct, object userState) {
            if ((this.onBeginAddTypeProductDelegate == null)) {
                this.onBeginAddTypeProductDelegate = new BeginOperationDelegate(this.OnBeginAddTypeProduct);
            }
            if ((this.onEndAddTypeProductDelegate == null)) {
                this.onEndAddTypeProductDelegate = new EndOperationDelegate(this.OnEndAddTypeProduct);
            }
            if ((this.onAddTypeProductCompletedDelegate == null)) {
                this.onAddTypeProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddTypeProductCompleted);
            }
            base.InvokeAsync(this.onBeginAddTypeProductDelegate, new object[] {
                        typeProduct}, this.onEndAddTypeProductDelegate, this.onAddTypeProductCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Chronocourses.Client.TypeProductService.ITypeProductService.BeginDeleteTypeProduct(Chronocourses.Client.TypeProductService.TypeProduct typeProduct, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTypeProduct(typeProduct, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Chronocourses.Client.TypeProductService.ITypeProductService.EndDeleteTypeProduct(System.IAsyncResult result) {
            return base.Channel.EndDeleteTypeProduct(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTypeProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Chronocourses.Client.TypeProductService.TypeProduct typeProduct = ((Chronocourses.Client.TypeProductService.TypeProduct)(inValues[0]));
            return ((Chronocourses.Client.TypeProductService.ITypeProductService)(this)).BeginDeleteTypeProduct(typeProduct, callback, asyncState);
        }
        
        private object[] OnEndDeleteTypeProduct(System.IAsyncResult result) {
            int retVal = ((Chronocourses.Client.TypeProductService.ITypeProductService)(this)).EndDeleteTypeProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteTypeProductCompleted(object state) {
            if ((this.DeleteTypeProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTypeProductCompleted(this, new DeleteTypeProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTypeProductAsync(Chronocourses.Client.TypeProductService.TypeProduct typeProduct) {
            this.DeleteTypeProductAsync(typeProduct, null);
        }
        
        public void DeleteTypeProductAsync(Chronocourses.Client.TypeProductService.TypeProduct typeProduct, object userState) {
            if ((this.onBeginDeleteTypeProductDelegate == null)) {
                this.onBeginDeleteTypeProductDelegate = new BeginOperationDelegate(this.OnBeginDeleteTypeProduct);
            }
            if ((this.onEndDeleteTypeProductDelegate == null)) {
                this.onEndDeleteTypeProductDelegate = new EndOperationDelegate(this.OnEndDeleteTypeProduct);
            }
            if ((this.onDeleteTypeProductCompletedDelegate == null)) {
                this.onDeleteTypeProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTypeProductCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTypeProductDelegate, new object[] {
                        typeProduct}, this.onEndDeleteTypeProductDelegate, this.onDeleteTypeProductCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Chronocourses.Client.TypeProductService.ITypeProductService CreateChannel() {
            return new TypeProductServiceClientChannel(this);
        }
        
        private class TypeProductServiceClientChannel : ChannelBase<Chronocourses.Client.TypeProductService.ITypeProductService>, Chronocourses.Client.TypeProductService.ITypeProductService {
            
            public TypeProductServiceClientChannel(System.ServiceModel.ClientBase<Chronocourses.Client.TypeProductService.ITypeProductService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetTypeProducts(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTypeProducts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Chronocourses.Client.TypeProductService.TypeProduct> EndGetTypeProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Chronocourses.Client.TypeProductService.TypeProduct> _result = ((System.Collections.Generic.List<Chronocourses.Client.TypeProductService.TypeProduct>)(base.EndInvoke("GetTypeProducts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProductsByTypeProduct(int typeProductId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = typeProductId;
                System.IAsyncResult _result = base.BeginInvoke("GetProductsByTypeProduct", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Product> EndGetProductsByTypeProduct(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Product> _result = ((System.Collections.Generic.List<Chronocourses.Client.TypeProductService.Product>)(base.EndInvoke("GetProductsByTypeProduct", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTypeProduct(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetTypeProduct", _args, callback, asyncState);
                return _result;
            }
            
            public Chronocourses.Client.TypeProductService.TypeProduct EndGetTypeProduct(System.IAsyncResult result) {
                object[] _args = new object[0];
                Chronocourses.Client.TypeProductService.TypeProduct _result = ((Chronocourses.Client.TypeProductService.TypeProduct)(base.EndInvoke("GetTypeProduct", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveTypeProduct(Chronocourses.Client.TypeProductService.TypeProduct typeProduct, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = typeProduct;
                System.IAsyncResult _result = base.BeginInvoke("SaveTypeProduct", _args, callback, asyncState);
                return _result;
            }
            
            public int EndSaveTypeProduct(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("SaveTypeProduct", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddTypeProduct(Chronocourses.Client.TypeProductService.TypeProduct typeProduct, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = typeProduct;
                System.IAsyncResult _result = base.BeginInvoke("AddTypeProduct", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAddTypeProduct(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AddTypeProduct", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteTypeProduct(Chronocourses.Client.TypeProductService.TypeProduct typeProduct, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = typeProduct;
                System.IAsyncResult _result = base.BeginInvoke("DeleteTypeProduct", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeleteTypeProduct(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeleteTypeProduct", _args, result)));
                return _result;
            }
        }
    }
}
